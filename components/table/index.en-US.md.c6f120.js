(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{3215:function(a,b){a.exports={content:["section",["p","A table displays rows of data."],["h2","When To Use"],["ul",["li",["p","To display a collection of structured data."]],["li",["p","To sort, search, paginate, filter data."]]],["h2","How To Use"],["p","Specify ",["code","dataSource"]," of Table as an array of data."],["pre",{lang:"jsx",highlighted:`<span class="token keyword">const</span> dataSource <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Mike'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'10 Downing Street'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'10 Downing Street'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>dataSource<span class="token punctuation">}</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>`},["code",`const dataSource = [
  {
    key: '1',
    name: 'Mike',
    age: 32,
    address: '10 Downing Street',
  },
  {
    key: '2',
    name: 'John',
    age: 42,
    address: '10 Downing Street',
  },
];

const columns = [
  {
    title: 'Name',
    dataIndex: 'name',
    key: 'name',
  },
  {
    title: 'Age',
    dataIndex: 'age',
    key: 'age',
  },
  {
    title: 'Address',
    dataIndex: 'address',
    key: 'address',
  },
];

<Table dataSource={dataSource} columns={columns} />;`]]],meta:{category:"Components",cols:1,type:"Data Display",title:"Table",cover:"https://gw.alipayobjects.com/zos/alicdn/f-SbcX2Lx/Table.svg",filename:"components/table/index.en-US.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#When-To-Use",title:"When To Use"},"When To Use"]],["li",["a",{className:"bisheng-toc-h2",href:"#How-To-Use",title:"How To Use"},"How To Use"]],["li",["a",{className:"bisheng-toc-h2",href:"#API",title:"API"},"API"]],["li",["a",{className:"bisheng-toc-h2",href:"#Using-in-TypeScript",title:"Using in TypeScript"},"Using in TypeScript"]],["li",["a",{className:"bisheng-toc-h2",href:"#Note",title:"Note"},"Note"]],["li",["a",{className:"bisheng-toc-h2",href:"#Migrate-to-v4",title:"Migrate to v4"},"Migrate to v4"]],["li",["a",{className:"bisheng-toc-h2",href:"#FAQ",title:"FAQ"},"FAQ"]]],api:["section",["h2","API"],["h3","Table"],["table",["thead",["tr",["th","Property"],["th","Description"],["th","Type"],["th","Default"]]],["tbody",["tr",["td","tableLayout"],["td",["a",{title:null,href:"https://developer.mozilla.org/en-US/docs/Web/CSS/table-layout"},"table-layout"]," attribute of table element"],["td","- ","|"," ",["code","auto"]," ","|"," ",["code","fixed"]],["td","-",["hr"],["code","fixed"]," when header/columns are fixed, or using ",["code","column.ellipsis"]]],["tr",["td","bordered"],["td","Whether to show all table borders"],["td","boolean"],["td",["code","false"]]],["tr",["td","columns"],["td","Columns of table"],["td",["a",{title:null,href:"#Column"},"ColumnProps"],"[","]"],["td","-"]],["tr",["td","components"],["td","Override default table elements"],["td",["a",{title:null,href:"https://git.io/fANxz"},"TableComponents"]],["td","-"]],["tr",["td","dataSource"],["td","Data record array to be displayed"],["td","object","[","]"],["td","-"]],["tr",["td","expandable"],["td","Config expandable content"],["td",["a",{title:null,href:"#expandable"},"expandable"]],["td","-"]],["tr",["td","footer"],["td","Table footer renderer"],["td","Function(currentPageData)"],["td","-"]],["tr",["td","loading"],["td","Loading status of table"],["td","boolean","|",["a",{title:null,href:"/components/spin/#API"},"object"]," (",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/4544#issuecomment-271533135"},"more"],")"],["td",["code","false"]]],["tr",["td","locale"],["td","i18n text including filter, sort, empty text, etc"],["td","object"],["td","filterConfirm: 'Ok' ",["br"]," filterReset: 'Reset' ",["br"]," emptyText: 'No Data' ",["br"]," ",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/575#issuecomment-159169511"},"Default"]]],["tr",["td","pagination"],["td","Config of pagination. You can ref table pagination ",["a",{title:null,href:"#pagination"},"config"]," or full ",["a",{title:null,href:"/components/pagination/"},["code","pagination"]]," document, hide it by setting it to ",["code","false"]],["td","object"],["td","-"]],["tr",["td","rowClassName"],["td","Row's className"],["td","Function(record, index):string"],["td","-"]],["tr",["td","rowKey"],["td","Row's unique key, could be a string or function that returns a string"],["td","string","|","Function(record):string"],["td",["code","key"]]],["tr",["td","rowSelection"],["td","Row selection ",["a",{title:null,href:"#rowSelection"},"config"]],["td","object"],["td","null"]],["tr",["td","scroll"],["td","Whether the table can be scrollable, ",["a",{title:null,href:"#scroll"},"config"]],["td","object"],["td","-"]],["tr",["td","showHeader"],["td","Whether to show table header"],["td","boolean"],["td",["code","true"]]],["tr",["td","size"],["td","Size of table"],["td",["code","default"]," ","|"," ",["code","middle"]," ","|"," ",["code","small"]],["td",["code","default"]]],["tr",["td","summary"],["td","Summary content"],["td","(currentData) => ReactNode"],["td","-"]],["tr",["td","title"],["td","Table title renderer"],["td","Function(currentPageData)"],["td","-"]],["tr",["td","onChange"],["td","Callback executed when pagination, filters or sorter is changed"],["td","Function(pagination, filters, sorter, extra: { currentDataSource: [] })"],["td","-"]],["tr",["td","onHeaderRow"],["td","Set props on per header row"],["td","Function(column, index)"],["td","-"]],["tr",["td","onRow"],["td","Set props on per row"],["td","Function(record, index)"],["td","-"]],["tr",["td","getPopupContainer"],["td","the render container of dropdowns in table"],["td","(triggerNode) => HTMLElement"],["td",["code","() => TableHtmlElement"]]],["tr",["td","sortDirections"],["td","supported sort way, could be ",["code","'ascend'"],", ",["code","'descend'"]],["td","Array"],["td",["code","['ascend', 'descend']"]]],["tr",["td","showSorterTooltip"],["td","header show next sorter direction tooltip"],["td","boolean"],["td",["code","true"]]]]],["h4","onRow usage"],["p","Same as ",["code","onRow"]," ",["code","onHeaderRow"]," ",["code","onCell"]," ",["code","onHeaderCell"]],["pre",{lang:"jsx",highlighted:`<span class="token operator">&lt;</span>Table
  onRow<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> rowIndex<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      onClick<span class="token punctuation">:</span> event <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// click row</span>
      onDoubleClick<span class="token punctuation">:</span> event <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// double click row</span>
      onContextMenu<span class="token punctuation">:</span> event <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// right button click row</span>
      onMouseEnter<span class="token punctuation">:</span> event <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// mouse enter row</span>
      onMouseLeave<span class="token punctuation">:</span> event <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// mouse leave row</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">}</span>
  onHeaderRow<span class="token operator">=</span><span class="token punctuation">{</span>column <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      onClick<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// click header row</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token operator">/</span><span class="token operator">></span>`},["code",`<Table
  onRow={(record, rowIndex) => {
    return {
      onClick: event => {}, // click row
      onDoubleClick: event => {}, // double click row
      onContextMenu: event => {}, // right button click row
      onMouseEnter: event => {}, // mouse enter row
      onMouseLeave: event => {}, // mouse leave row
    };
  }}
  onHeaderRow={column => {
    return {
      onClick: () => {}, // click header row
    };
  }}
/>`]],["h3","Column"],["p","One of the Table ",["code","columns"]," prop for describing the table's columns, Column has the same API."],["table",["thead",["tr",["th","Property"],["th","Description"],["th","Type"],["th","Default"],["th","Version"]]],["tbody",["tr",["td","align"],["td","specify which way that column is aligned"],["td",["code","left"]," ","|"," ",["code","right"]," ","|"," ",["code","center"]],["td",["code","left"]],["td"]],["tr",["td","ellipsis"],["td","ellipsis cell content, not working with sorter and filters for now.",["br"],"tableLayout would be ",["code","fixed"]," when ",["code","ellipsis"]," is ",["code","true"]," or ",["code","{ showTitle?: boolean }"],"."],["td","boolean ","|"," { showTitle?: boolean }"],["td","false"],["td","showTitle: 4.3.0"]],["tr",["td","className"],["td","className of this column"],["td","string"],["td","-"],["td"]],["tr",["td","colSpan"],["td","Span of this column's title"],["td","number"],["td","-"],["td"]],["tr",["td","dataIndex"],["td","Display field of the data record, support nest path by string array"],["td","string ","|"," string","[","]"],["td","-"],["td"]],["tr",["td","defaultFilteredValue"],["td","Default filtered values"],["td","string","[","]"],["td","-"],["td"],["td"]],["tr",["td","defaultSortOrder"],["td","Default order of sorted values"],["td",["code","ascend"]," ","|"," ",["code","descend"]],["td","-"],["td"]],["tr",["td","filterDropdown"],["td","Customized filter overlay"],["td","React.ReactNode ","|"," (props: ",["a",{title:null,href:"https://git.io/fjP5h"},"FilterDropdownProps"],") => React.ReactNode"],["td","-"],["td"]],["tr",["td","filterDropdownVisible"],["td","Whether ",["code","filterDropdown"]," is visible"],["td","boolean"],["td","-"],["td"]],["tr",["td","filtered"],["td","Whether the ",["code","dataSource"]," is filtered"],["td","boolean"],["td",["code","false"]],["td"]],["tr",["td","filteredValue"],["td","Controlled filtered value, filter icon will highlight"],["td","string","[","]"],["td","-"],["td"]],["tr",["td","filterIcon"],["td","Customized filter icon"],["td","ReactNode","|","(filtered: boolean) => ReactNode"],["td",["code","false"]],["td"]],["tr",["td","filterMultiple"],["td","Whether multiple filters can be selected"],["td","boolean"],["td",["code","true"]],["td"]],["tr",["td","filters"],["td","Filter menu config"],["td","object","[","]"],["td","-"],["td"]],["tr",["td","fixed"],["td","(IE not support) Set column to be fixed: ",["code","true"],"(same as left) ",["code","'left'"]," ",["code","'right'"]],["td","boolean","|","string"],["td",["code","false"]],["td"]],["tr",["td","key"],["td","Unique key of this column, you can ignore this prop if you've set a unique ",["code","dataIndex"]],["td","string"],["td","-"],["td"]],["tr",["td","render"],["td","Renderer of the table cell. The return value should be a ReactNode, or an object for ",["a",{title:null,href:"#components-table-demo-colspan-rowspan"},"colSpan/rowSpan config"]],["td","Function(text, record, index) {}"],["td","-"],["td"]],["tr",["td","responsive"],["td","The list of breakpoints at which to display this column. Always visible if not set."],["td",["a",{title:null,href:"https://github.com/ant-design/ant-design/blob/015109b42b85c63146371b4e32b883cf97b088e8/components/_util/responsiveObserve.ts#L1"},"Breakpoint"],"[","]"],["td","-"],["td","4.2.0"]],["tr",["td","shouldCellUpdate"],["td","Control cell render logic"],["td","(record) => boolean"],["td","-"],["td","4.3.0"]],["tr",["td","sorter"],["td","Sort function for local sort, see ",["a",{title:null,href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort"},"Array.sort"],"'s compareFunction. If you need sort buttons only, set to ",["code","true"]],["td","Function","|","boolean"],["td","-"],["td"]],["tr",["td","sortOrder"],["td","Order of sorted values: ",["code","'ascend'"]," ",["code","'descend'"]," ",["code","false"]],["td","boolean","|","string"],["td","-"],["td"]],["tr",["td","sortDirections"],["td","supported sort way, override ",["code","sortDirections"]," in ",["code","Table"],", could be ",["code","'ascend'"],", ",["code","'descend'"]],["td","Array"],["td",["code","['ascend', 'descend']"]],["td"]],["tr",["td","title"],["td","Title of this column"],["td","ReactNode","|","({ sortOrder, sortColumn, filters }) => ReactNode"],["td","-"],["td"]],["tr",["td","width"],["td","Width of this column (",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241"},"width not working?"],")"],["td","string","|","number"],["td","-"],["td"]],["tr",["td","onCell"],["td","Set props on per cell"],["td","Function(record, rowIndex)"],["td","-"],["td"]],["tr",["td","onFilter"],["td","Callback executed when the confirm filter button is clicked"],["td","Function"],["td","-"],["td"]],["tr",["td","onFilterDropdownVisibleChange"],["td","Callback executed when ",["code","filterDropdownVisible"]," is changed"],["td","function(visible) {}"],["td","-"],["td"]],["tr",["td","onHeaderCell"],["td","Set props on per header cell"],["td","Function(column)"],["td","-"],["td"]],["tr",["td","showSorterTooltip"],["td","header show next sorter direction tooltip, override ",["code","showSorterTooltip"]," in table"],["td","boolean"],["td",["code","true"]],["td"]]]],["h3","ColumnGroup"],["table",["thead",["tr",["th","Property"],["th","Description"],["th","Type"],["th","Default"]]],["tbody",["tr",["td","title"],["td","Title of the column group"],["td","string","|","ReactNode"],["td","-"]]]],["h3","pagination"],["p","Properties for pagination."],["table",["thead",["tr",["th","Property"],["th","Description"],["th","Type"],["th","Default"]]],["tbody",["tr",["td","position"],["td","specify the position of ",["code","Pagination"],", could be ",["code","topLeft"]," ","|"," ",["code","topCenter"]," ","|"," ",["code","topRight"]," ","|",["code","bottomLeft"]," ","|"," ",["code","bottomCenter"]," ","|"," ",["code","bottomRight"]],["td","Array"],["td",["code","['bottomRight']"]]]]],["p","More about pagination, please check ",["a",{title:null,href:"/components/pagination/"},["code","Pagination"]],"."],["h3","expandable"],["p","Properties for expandable."],["table",["thead",["tr",["th","Property"],["th","Description"],["th","Type"],["th","Default"]]],["tbody",["tr",["td","childrenColumnName"],["td","The column contains children to display"],["td","string","[","]"],["td","children"]],["tr",["td","defaultExpandAllRows"],["td","Expand all rows initially"],["td","boolean"],["td",["code","false"]]],["tr",["td","defaultExpandedRowKeys"],["td","Initial expanded row keys"],["td","string","[","]"],["td","-"]],["tr",["td","expandIcon"],["td","Customize row expand Icon. Ref ",["a",{title:null,href:"https://codesandbox.io/s/fervent-bird-nuzpr"},"example"]],["td","Function(props):ReactNode"],["td","-"]],["tr",["td","expandIconColumnIndex"],["td","Customize expand icon column index"],["td","number"],["td","-"]],["tr",["td","expandedRowKeys"],["td","Current expanded row keys"],["td","string","[","]"],["td","-"]],["tr",["td","expandedRowRender"],["td","Expanded container render for each row"],["td","Function(record, index, indent, expanded):ReactNode"],["td","-"]],["tr",["td","expandRowByClick"],["td","Whether to expand row by clicking anywhere in the whole row"],["td","boolean"],["td",["code","false"]]],["tr",["td","indentSize"],["td","Indent size in pixels of tree data"],["td","number"],["td","15"]],["tr",["td","rowExpandable"],["td","Enable row can be expandable"],["td","(record) => boolean"],["td","-"]],["tr",["td","onExpand"],["td","Callback executed when the row expand icon is clicked"],["td","Function(expanded, record)"],["td","-"]],["tr",["td","onExpandedRowsChange"],["td","Callback executed when the expanded rows change"],["td","Function(expandedRows)"],["td","-"]]]],["h3","rowSelection"],["p","Properties for row selection."],["table",["thead",["tr",["th","Property"],["th","Description"],["th","Type"],["th","Default"],["th","Version"]]],["tbody",["tr",["td","columnWidth"],["td","Set the width of the selection column"],["td","string","|","number"],["td",["code","60px"]],["td","4.0"]],["tr",["td","columnTitle"],["td","Set the title of the selection column"],["td","string","|","React.ReactNode"],["td","-"],["td","4.0"]],["tr",["td","fixed"],["td","Fixed selection column on the left"],["td","boolean"],["td","-"],["td","4.0"]],["tr",["td","getCheckboxProps"],["td","Get Checkbox or Radio props"],["td","Function(record)"],["td","-"],["td","4.0"]],["tr",["td","hideSelectAll"],["td","Hide the selectAll checkbox and custom selection"],["td","boolean"],["td",["code","false"]],["td","4.3"]],["tr",["td","renderCell"],["td","Renderer of the table cell. Same as ",["code","render"]," in column"],["td","Function(checked, record, index, originNode) {}"],["td","-"],["td","4.1"]],["tr",["td","selectedRowKeys"],["td","Controlled selected row keys"],["td","string","[","]","|","number[]"],["td","[","]"],["td","4.0"]],["tr",["td","selections"],["td","Custom selection ",["a",{title:null,href:"#rowSelection"},"config"],", only displays default selections when set to ",["code","true"]],["td","object","[","]","|","boolean"],["td","-"],["td","4.0"]],["tr",["td","type"],["td",["code","checkbox"]," or ",["code","radio"]],["td",["code","checkbox"]," ","|"," ",["code","radio"]],["td",["code","checkbox"]],["td","4.0"]],["tr",["td","onChange"],["td","Callback executed when selected rows change"],["td","Function(selectedRowKeys, selectedRows)"],["td","-"],["td","4.0"]],["tr",["td","onSelect"],["td","Callback executed when select/deselect one row"],["td","Function(record, selected, selectedRows, nativeEvent)"],["td","-"],["td","4.0"]],["tr",["td","onSelectAll"],["td","Callback executed when select/deselect all rows"],["td","Function(selected, selectedRows, changeRows)"],["td","-"],["td","4.0"]],["tr",["td","onSelectInvert"],["td","Callback executed when row selection is inverted"],["td","Function(selectedRowKeys)"],["td","-"],["td","4.0"]]]],["h3","scroll"],["table",["thead",["tr",["th","Property"],["th","Description"],["th","Type"],["th","Default"]]],["tbody",["tr",["td","x"],["td","Set horizontal scrolling, can also be used to specify the width of the scroll area, could be number, percent value, true and ",["a",{title:null,href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/width#max-content"},"'max-content'"]],["td","number ","|"," true"],["td","-"]],["tr",["td","y"],["td","Set vertical scrolling, can also be used to specify the height of the scroll area, could be number"],["td","number"],["td","-"]],["tr",["td","scrollToFirstRowOnChange"],["td","Whether to scroll to the top of the table when paging, sorting, filtering changes"],["td","boolean"],["td","-"]]]],["h3","selection"],["table",["thead",["tr",["th","Property"],["th","Description"],["th","Type"],["th","Default"]]],["tbody",["tr",["td","key"],["td","Unique key of this selection"],["td","string"],["td","-"]],["tr",["td","text"],["td","Display text of this selection"],["td","string","|","React.ReactNode"],["td","-"]],["tr",["td","onSelect"],["td","Callback executed when this selection is clicked"],["td","Function(changeableRowKeys)"],["td","-"]]]],["h2","Using in TypeScript"],["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { ColumnProps } from <span class="token string">'antd/es/table'</span><span class="token comment" spellcheck="true">;</span>

interface User {
  key<span class="token punctuation">:</span> number<span class="token punctuation">,</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnProps<span class="token operator">&lt;</span>User<span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>{
  key<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
  dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
}<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> User<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>{
  key<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  name<span class="token punctuation">:</span> <span class="token string">'Jack'</span><span class="token punctuation">,</span>
}<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

class UserTable extends Table<span class="token operator">&lt;</span>User<span class="token operator">></span> {}

<span class="token operator">&lt;</span>UserTable columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} <span class="token operator">/</span><span class="token operator">></span>

<span class="token operator">/</span><span class="token operator">/</span> Use JSX style API
class NameColumn extends Table<span class="token punctuation">.</span>Column<span class="token operator">&lt;</span>User<span class="token operator">></span> {}

<span class="token operator">&lt;</span>UserTable dataSource<span class="token operator">=</span>{data}<span class="token operator">></span>
  <span class="token operator">&lt;</span>NameColumn key<span class="token operator">=</span><span class="token string">"name"</span> title<span class="token operator">=</span><span class="token string">"Name"</span> dataIndex<span class="token operator">=</span><span class="token string">"name"</span> <span class="token operator">/</span><span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>UserTable<span class="token operator">></span>

<span class="token operator">/</span><span class="token operator">/</span> after TypeScript <span class="token number">2.9</span> can write like this
<span class="token operator">/</span><span class="token operator">/</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>typescriptlang<span class="token punctuation">.</span>org<span class="token operator">/</span>docs<span class="token operator">/</span>handbook<span class="token operator">/</span>release<span class="token operator">-</span>notes<span class="token operator">/</span>typescript<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">.</span>html#generic<span class="token operator">-</span>type<span class="token operator">-</span>arguments<span class="token operator">-</span><span class="token keyword">in</span><span class="token operator">-</span>jsx<span class="token operator">-</span>elements
<span class="token operator">&lt;</span>Table<span class="token operator">&lt;</span>User<span class="token operator">></span> columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} <span class="token operator">/</span><span class="token operator">></span>
<span class="token operator">&lt;</span>Table<span class="token operator">&lt;</span>User<span class="token operator">></span> dataSource<span class="token operator">=</span>{data}<span class="token operator">></span>
  <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Column<span class="token operator">&lt;</span>User<span class="token operator">></span> key<span class="token operator">=</span><span class="token string">"name"</span> title<span class="token operator">=</span><span class="token string">"Name"</span> dataIndex<span class="token operator">=</span><span class="token string">"name"</span> <span class="token operator">/</span><span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token operator">></span>`},["code",`import { Table } from 'antd';
import { ColumnProps } from 'antd/es/table';

interface User {
  key: number,
  name: string;
}

const columns: ColumnProps<User>[] = [{
  key: 'name',
  title: 'Name',
  dataIndex: 'name',
}];

const data: User[] = [{
  key: 0,
  name: 'Jack',
}];

class UserTable extends Table<User> {}

<UserTable columns={columns} dataSource={data} />

// Use JSX style API
class NameColumn extends Table.Column<User> {}

<UserTable dataSource={data}>
  <NameColumn key="name" title="Name" dataIndex="name" />
</UserTable>

// after TypeScript 2.9 can write like this
// https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-9.html#generic-type-arguments-in-jsx-elements
<Table<User> columns={columns} dataSource={data} />
<Table<User> dataSource={data}>
  <Table.Column<User> key="name" title="Name" dataIndex="name" />
</Table>`]],["h2","Note"],["p","According to the ",["a",{title:null,href:"https://facebook.github.io/react/docs/lists-and-keys.html#keys"},"React documentation"],", every child in an array should be assigned a unique key. The values inside the Table's ",["code","dataSource"]," and ",["code","columns"]," should follow this rule. By default, ",["code","dataSource[i].key"]," will be treated as the key value for ",["code","dataSource"],"."],["p",["img",{title:null,src:"https://os.alipayobjects.com/rmsportal/luLdLvhPOiRpyss.png",alt:"console warning"}]],["p","If ",["code","dataSource[i].key"]," is not provided, then you should specify the primary key of dataSource value via ",["code","rowKey"],", as shown below. If not, warnings like the one above will show in browser console."],["pre",{lang:"jsx",highlighted:`<span class="token comment" spellcheck="true">// primary key is uid</span>
<span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">rowKey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>uid<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// or</span>
<span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">rowKey</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>record <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>uid<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>`},["code",`// primary key is uid
return <Table rowKey="uid" />;
// or
return <Table rowKey={record => record.uid} />;`]],["h2","Migrate to v4"],["p","Table removes ",["code","onRowClick"],", ",["code","onRowDoubleClick"],", ",["code","onRowMouseEnter"],", ",["code","onRowMouseLeave"]," and some other api which is already deprecated in v3. If you only use api listing in official document, that's OK."],["p","Besides, the breaking change is changing ",["code","dataIndex"]," from nest string path like ",["code","user.age"]," to string array path like ",["code","['user', 'age']"],". This help to resolve developer should additional work on the field which contains ",["code","."],"."],["h2","FAQ"],["h3","How to hide pagination when single page or not data?"],["p","You can set ",["code","hideOnSinglePage"]," with ",["code","pagination"]," prop."],["h3","Table will return to first page when filter data."],["p","Table total page count usually reduce after filter data, we defaultly return to first page in case of current page is out of filtered results."],["p","You may need to keep current page after filtering when fetch data from remote service, please check ",["a",{title:null,href:"https://codesandbox.io/s/yuanchengjiazaishuju-ant-design-demo-7y2uf"},"this demo"]," as workaround."],["h3","Why Table pagination show size changer?"],["p","In order to improve user experience, Pagination show size changer by default when ",["code","total >= 50"]," since ",["code","4.1.0"],". You can set ",["code","showSizeChanger=false"]," to disable this feature."],["h3","Why Table fully render when state change?"],["p","Table can not tell what state used in ",["code","columns.render"],", so it always need fully render to avoid sync issue. You can use ",["code","column.shouldCellUpdate"]," to control render."]]}}}]);
